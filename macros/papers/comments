Legend:

o = unconsidered
@ = we have a plan, but haven't yet implemented that change
  = done
^ = problem addressed differently
x = not done (rejected the suggestion)



o The one big comment: it's too easy to lose track where one is in the paper.
o I don't know how to solve this.

^ 1) Mike, you should add an acknowledgment of your IBM fellowship.
    [Moved to end.]


  2) Introduction:

       a) "understanding and transforming" should perhaps read "understanding
       and modifying".  I didn't mark it everywhere, but this version still
       feels a bit too heavily weighted towards supporting transformation of
       C programs (to C++), and I don't think that works so well.

       b) "but lends itself to arbitrary" => "allowing"

       c) The period at the end of the p. 424 Stroustrup quotation should, I
       think go after the "]".
    [That would work, too, but I (not strongly) prefer the current way.]

^      d) I think we can live without any citations to approximate tools, but
^      it wouldn't hurt either.
    [David says it's better to have none than some.]

       e) "approximate tools (such ... techniques)." => "tools that produce
       approximate information, such as those based on lexical or on
       approximate parsing techniques."

       f) The segue from the last bullet ("The final option") to the next
       paragraph is weak.  I know, I put it there myself.  I'll suggest
       something like the following:

            "Choices among these options are made in the absence of
            an understanding of how Cpp is used in practice.  That is,
            much has been written about Cpp's potential pitfalls, but no
            previous work has examined..."

       g) "that might, if present in practice, compilcate" => that complicate"

o      h) After "software engineers and tool builders" I might add the following
o      text:

o           "Each of these pitfalls arises to some degree in practice.  What
o           our analysis determines is the extent to which it occurs.  For
o           pitfalls that arise infrequently in practice, different
o           approaches to tool building and other activities might be
o           feasible."

o           [OK, the writing sucks.  But something like this might help,
o           perhaps after the bullets.]

       i) Make sure that Cpp is consistently capitalized throughout.

^      j) I happen to hate the formatting of {description}, but that's life.
    [No better suggestion arose.]

o      k) I would try to make every item in the pitfalls list include the
o      word "problematic" (or a synonym), to give the sense about what the
o      specific pitfall is.  As an example, why complicated bodies are a
o      potential pitfall isn't stated.

  3) Metholodogy

@      a) Do either of you know the difference between "that" and "which"?
@      (Restrictive vs. unrestrictive, I believe, is the term.)  If so, fix
@      them in the paper.  Otherwise, don't waste the time now.  (A quick
@      look at the on-line Strunk & White can give a quick rundown on this.)
    [Greg will do this.]

       b) "while others are not, and some are graphical while" => "while
       others are not; some are graphical, while"

       c) "thoroughgoing" => "thorough"

^      d) This [[comment]] on merging Cpp branches should come out,
^      I think, without replacement by real text.
    [I'm not sure I buy this, but OK.]

       e) I'm not sure that the paragraph, "We perform approximate
       parsing..."  belongs where it is.  I slightly prefer appending it to
       the end of the following paragraph (which introduces the tools
       themselves), although I don't really like ending the section that way.
       OK, so instead insert this paragraph between the two sentences in the
       last paragraph.  I think that works.

       f) "because the input is not a valid C program".  Well, this maybe
       should be "because the input may not be a valid C program".

       g) "Perk" => "Perl"

  4) Occurrence of preprocessor directives

o      a) MAJOR POINT: As I said in earlier email to Mike, I think the
o      biggest problem with the paper is that it's unbelievably easy to get
o      lost in the middle of the data and analysis.  We either need stronger
o      intros and conclusions, or we need some kind of trick to keep people
o      aware of where they are.  (I found this worst in Section 4, I think,
o      which is very long.)  If this were a talk, the kind of icons to track
o      progress would work; but I don't have a great idea here.

       b) "non-comment, non-blank (NCNB)" => "NCNB", since it was already
       defined and introduced.

       c) "One in ten" => "Nearly one in ten"

       d) "percentage of #define" => "percentage of #defines" (with proper
       typefaces.

       e) FOR ALL THE FIGURES, make sure that there is only one caption,
       not one from Excel and one from Latex.
    [Those are actually x-axis labels, not captions.  Greg will put them in
    non-bold typeface.]

       f) Even for Figure 2's caption, I'd add a "fer instance":  "For
       example, x.y% of gzip's NCNB lines are #includes, and 4.4% of all
       lines across the packages are conditional complation directives."

       g) "are easiest to understand and to translate into the programming
       language" ...  This is an example of a sentence that needs to be
       rewritten.  I'd say something like:

            "are easiest to analyze, understand, and perhaps even
            translate into other language constructs; so there is reason
            to believe that the 70% of macros whose bodies are
            expressions and the 6% that are statements can be handled
            relatively easily by people and tools."

o      Similarly, the last sentence in the "Type" item ("may be tricky to
o      understand" focuses too much on translation and can be similarly
o      rewritten, I believe.

       h) I found that the Cpp directives in-line worked pretty well most of
       the time.  But I found that sometimes, like in "Statement", it didn't
       work well, especially with the use of the quotation marks.  I think
       in these cases (and perhaps always, although it will length the
       paper a tad), the longer directives should be opened up.  For
       example (**'s are bullets),

	    "The macro body is a complete statement such as one
	    of the following:

		 ** plu = ".";
		 ** if (x) {free(x); x=NULL;}
		 ** { int...}

	    Such a macro..."

       i) Omit any text w.r.t. "[[Not all such are...]]", since it's covered
       later.

       j) Make sure all the package names are visible on the vertical
       axis for Figure 3.
    [Greg will do this.]

^      k) I was surprised to read (I had probably just forgotten) that
^      the parser "does not handle uses of pasting".  All uses?  Also,
^      this reminds me that it's probably worthwhile defining what
^      stringization and pasting are, perhaps in a footnote.
    [Yes, all uses :-(.  I added a reference to the properties explanation
    of section 4.3.]

       l) "were examined" =< "were examined)"

       m) "elimination of the preprocessor" => "reducing the use of
       the preprocessor"

       n) In the example in Stringization (right before 4.3), definitely
       put the example on a line of its own, since this parenthetical
       ("(the comman is part of the macro body)" really sucks).

o      o) The transition to 4.3 (macro lint) is a specific place I got
o      a bit lost.  It's not that the intro to 4.3 isn't clear.  It's a bit
o      more of a question, why is this in Section 4.  Yes, even that's clear
o      when you think about it, but somehow I started getting lost here.
o      Maybe it's OK, but I'm a bit concerned (and don't know exactly
o      what to do).  I scrawled in a corner near the end of 4.3, "Does
o      4.3 belong here?"  I think the reason is the "macro lint" is a
o      bit disruptive; it sounds like a tool is the focus, rather than the
o      analysis per se.

       p) "We were surprised that more macros did not take simple..."
       This whole sentence can go, since it's handled (better) a bit
       later on.

       q) Check the formatting in the use of TAINT_ENV in "swallows
       else"

o      r) I think at the end of 4.3 (macro lint) we need a pointer to
o      related work (lclint, etc.).

       s) "under all possible circumstances" => "under all possible
       configurations", perhaps?

       t) "less than 2" => "less than two"

       u) "redefined In" => "redefined.  In"

       v) "definitions in in" => "definitions in"

       w) "intervening #undef", make sure it's formatting properly.

  Figure 6: Move the "(#define directives)" to the first phrase, after
       "Number of definitions".

  Section 4:

       a) In my version there is a problem (I'd guess a % not a \%) right
       after the phrase "defined more than 20 times, and"

       b) In the subsection on "Inconsistent definitions", I wonder if
       the rules for merging should really go here.  I understand why
       they are here, but they break the flow a bit.  It's probably right
       to leave them there, but a long footnote and a short appendix
       are alternatives.

       c) In the third bullet in category merging, the parenthetical has
       to be rephrased.  Saying "this is the wrong way" isn't a smart
       idea in a paper.  I can imagine a rephrased footnote as more
       appropriate, too; it's even reasonably (perhaps best) simply
       to omit the parenthetical.

       d) I slightly agree with Greg about dropping Figure 7.   I don't
       feel strongly here.
    [Yes, we'll drop it and move figure 11 up.]

       e) "plus some complete sentences" => "plus some complete
       statements".

x      f) In caption of Figure 8: "classified as `failure'" => "classified
x      as `failure' due to appearance in conflicting categories"
    [No, they might be classified as failure due only to appearance in one
    category -- failure.]

  Section 5:

       a) In the second sentence it says "one of three things".  A few
       sentences down is says "in both ways".  I found this a little
       confusing.

       b) "Overall, half" => "Overall, about half"

^      c) "Interestingly, the four packages" => "Interestingly, but
^      perhaps coincidentally, the four packages"
    [Delete "interestingly"; let the reader draw his/her own conclusions.]

o      d) I wonder about moving the reference to Figure 12
o      to earlier in 5.2 (macro usage in conditional compilation).
o      It's clearly backwards to do this, since the figure mentions
o      the categories listed at the beginning of 5.2.  But I think
o      the figure is what we want people to look at, and with
o      a quick phrase as a forward reference to the categories,
o      this might work better.

       e) Section 5.4 (number of arguments) should either go or
       use a brief chart to capture the key ideas.  Or the basics
       can be present in running text with a few key pieces of
       data.  I think that leaving it in makes sense (without the
       figure).
    [Eliminated.]

  Section 6:

       a) Definitely choose and consistently use a terminology.
       It matters far less which terminology you choose.

o      b) As for the algorithm description, it's barely adequate.
o      I slightly lean towards a pseudo-code figure of the
o      algorithm, although it doesn't fully deserve that either.

       c) I assume 6.2.1 and 6.2.2 have been rewritten, so I'm
       not providing comments.  I'm happy to take another pass
       at these (or all of Section 6).

  Section 7 (Related Work):

       a) Fix nits in the initial "Carroll and Ellis" statement.

^      b) "our analysis tool identifies" => "our analysis tool
^      identifies.  However, it appears that GNU's hints are
^      based on experience; we provide additional empirical
^      data that might help refine a set of hints."
    [I used slightly different wording, and put this at the end of the
    paragraph.]

       c) The "lint" paragraph is too informal.  And it is followed
       by a paragraph that thinks lint hasn't just been mentioned.

       d) Don't nitpick the LCLint stuff.  Simple observe that their
       decisions and our decisions (about macro lint) differ; if
       we really produced a macro lint tool, users would get
       different answers.  Then you can mention a single specific,
       but no more.

  Section 8 (Conclusions):

o      a) I wouldn't recap too much: at most a bullet or two per
o      data section.  And it needn't be equitable: that is, it is
o      reasonable to omit bullets from some sections and include
o      an extra or two from others.  Only "sound bites" should go
o      here.

o      b) There's a lot of informality left in the conclusions.  If
o      it hasn't been revised, let me know and I'll send comments.
o      If it has, send it to me and I'll comment on that.
