#!/uns/bin/perl -wn
# lint-summarize

# Invoke like: lint-summarize *.lint

use em_util;
use em_constants;

if (/^Excluding libraries, (\d+) macros defined (\d+) times in (\d+) packages$/)
  { die "found \"in packages\": $_"; }
elsif (/^Excluding libraries, (\d+) macros defined (\d+) times$/)
  { $macros += $1;
    $defs += $2;
    $packages++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) inconsistent arity$/)
  { $different_arity += $1;
    $different_arity_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) null body with args$/)
  { $null_body += $1;
    $null_body_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) contains newline$/)
  { $newline_body += $1;
    $newline_body_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) unparenthesized body$/)
  { $unparen_body += $1;
    $unparen_body_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) swallows semicolon$/)
  { $swallow_semi += $1;
    $swallow_semi_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) free variables$/)
  { $free_var += $1;
    $free_var_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) bad formal name$/)
  { $formal_name += $1;
    $formal_name_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) multiple formal uses$/)
  { $formal_mult_use += $1;
    $formal_mult_use_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) adjacent formal uses$/)
  { $formal_adjacent_use += $1;
    $formal_adjacent_use_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) unparenthesized formal uses$/)
  { $formal_unparen_use += $1;
    $formal_unparen_use_files++; }
elsif (/^([0-9]+) \([0-9]+\.[0-9]+%\) side-effected formal$/)
  { $formal_modified += $1;
    $formal_modified_files++; }

END
{
  if (($defs_files != $different_arity_files)
      || ($defs_files != $null_body_files)
      || ($defs_files != $newline_body_files)
      || ($defs_files != $unparen_body_files)
      || ($defs_files != $swallow_semi_files)
      || ($defs_files != $free_var_files)
      || ($defs_files != $formal_name_files)
      || ($defs_files != $formal_mult_use_files)
      || ($defs_files != $formal_adjacent_use_files)
      || ($defs_files != $formal_unparen_use_files)
      || ($defs_files != $formal_modified_files))
    { die "Inconsistent number of files with info: '$defs_files' '$null_body_files' '$newline_body_files' '$unparen_body_files' '$swallow_semi_files' '$free_var_files' '$formal_name_files' '$formal_mult_use_files' '$formal_adjacent_use_files' '$formal_unparen_use_files' '$formal_modified_files'"; }

  print_lint_summary($different_arity, $null_body, $newline_body,
		     $unparen_body, $swallow_semi, $free_var, $formal_name,
		     $formal_mult_use, $formal_adjacent_use,
		     $formal_unparen_use, $formal_modified,
		     $macros, $defs, $packages);
}
