#!/bin/csh -f

# This script tests the elif processing of cppp.
# It uses test file "test-elif.c" which contains exhaustive elif constructs.
# It should be run in a scratch directory to which that file has been copied.

setenv CPP 'gcc -E'

setenv CPP_TRUE "$CPP -DTRUE=1 -DFALSE=0 -DUNKNOWN=1"
setenv CPP_FALSE "$CPP -DTRUE=1 -DFALSE=0 -DUNKNOWN=0"

setenv CHANGE_FILES "perl -pi.bak -e 's/uuu/test-elif/'"
# setenv STRIP_FILES "perl -pi.bak -e 's/^\# [0-9]+ \".*\n//'"
# \042 = "
# This doesn't seem to work either.
setenv STRIP_FILES "perl -pi.bak -e 's/^\# [0-9]+ \042.*\n//'"

## Run cpp in 2 configurations, stripping filenames and blank lines
## to avoid spurious diff output (-B doesn't do the right thing):
rm -f false.c; $CPP_FALSE test-elif.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false.c
rm -f true.c; $CPP_TRUE test-elif.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true.c

### Run cppp in 12 configurations

echo "uuu..."
cp -f test-elif.c uuu.c; rm -f uuu.c.nocppp; cppp uuu.c
rm -f false-uuu.c; $CPP_FALSE uuu.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-uuu.c
rm -f true-uuu.c; $CPP_TRUE uuu.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-uuu.c
diff -bB false-uuu.c false.c
if ($status != 0) then
  echo "false-uuu.c differs from false.c"
  exit -1
endif
diff -bB true-uuu.c true.c
if ($status != 0) then
  echo "true-uuu.c differs from true.c"
  exit -1
endif

echo "1uu..."
cp -f test-elif.c 1uu.c; rm -f 1uu.c.nocppp; cppp -DTRUE=1 1uu.c
rm -f false-1uu.c; $CPP_FALSE 1uu.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-1uu.c
rm -f true-1uu.c; $CPP_TRUE 1uu.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-1uu.c
diff -bB false-1uu.c false.c
if ($status != 0) then
  echo "false-1uu.c differs from false.c"
  exit -1
endif
diff -bB true-1uu.c true.c
if ($status != 0) then
  echo "true-1uu.c differs from true.c"
  exit -1
endif

echo "u0u..."
cp -f test-elif.c u0u.c; rm -f u0u.c.nocppp; cppp -DFALSE=0 u0u.c
rm -f false-u0u.c; $CPP_FALSE u0u.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-u0u.c
rm -f true-u0u.c; $CPP_TRUE u0u.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-u0u.c
diff -bB false-u0u.c false.c
if ($status != 0) then
  echo "false-u0u.c differs from false.c"
  exit -1
endif
diff -bB true-u0u.c true.c
if ($status != 0) then
  echo "true-u0u.c differs from true.c"
  exit -1
endif

echo "10u..."
cp -f test-elif.c 10u.c; rm -f 10u.c.nocppp; cppp -DTRUE=1 -DFALSE=0 10u.c
rm -f false-10u.c; $CPP_FALSE 10u.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-10u.c
rm -f true-10u.c; $CPP_TRUE 10u.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-10u.c
diff -bB false-10u.c false.c
if ($status != 0) then
  echo "false-10u.c differs from false.c"
  exit -1
endif
diff -bB true-10u.c true.c
if ($status != 0) then
  echo "true-10u.c differs from true.c"
  exit -1
endif

echo "uu0..."
cp -f test-elif.c uu0.c; rm -f uu0.c.nocppp; cppp -DUNKNOWN=0 uu0.c
rm -f false-uu0.c; $CPP_FALSE uu0.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-uu0.c
diff -bB false-uu0.c false.c
if ($status != 0) then
  echo "false-uu0.c differs from false.c"
  exit -1
endif

echo "1u0..."
cp -f test-elif.c 1u0.c; rm -f 1u0.c.nocppp; cppp -DTRUE=1 -DUNKNOWN=0 1u0.c
rm -f false-1u0.c; $CPP_FALSE 1u0.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-1u0.c
diff -bB false-1u0.c false.c
if ($status != 0) then
  echo "false-1u0.c differs from false.c"
  exit -1
endif

echo "u00..."
cp -f test-elif.c u00.c; rm -f u00.c.nocppp; cppp -DFALSE=0 -DUNKNOWN=0 u00.c
rm -f false-u00.c; $CPP_FALSE u00.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-u00.c
diff -bB false-u00.c false.c
if ($status != 0) then
  echo "false-u00.c differs from false.c"
  exit -1
endif

echo "100..."
cp -f test-elif.c 100.c; rm -f 100.c.nocppp; cppp -DTRUE=1 -DFALSE=0 -DUNKNOWN=0 100.c
rm -f false-100.c; $CPP_FALSE 100.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > false-100.c
diff -bB false-100.c false.c
if ($status != 0) then
  echo "false-100.c differs from false.c"
  exit -1
endif

echo "uu1..."
cp -f test-elif.c uu1.c; rm -f uu1.c.nocppp; cppp -DUNKNOWN=1 uu1.c
rm -f true-uu1.c; $CPP_TRUE uu1.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-uu1.c
diff -bB true-uu1.c true.c
if ($status != 0) then
  echo "true-uu1.c differs from true.c"
  exit -1
endif

echo "1u1..."
cp -f test-elif.c 1u1.c; rm -f 1u1.c.nocppp; cppp -DTRUE=1 -DUNKNOWN=1 1u1.c
rm -f true-1u1.c; $CPP_TRUE 1u1.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-1u1.c
diff -bB true-1u1.c true.c
if ($status != 0) then
  echo "true-1u1.c differs from true.c"
  exit -1
endif

echo "u01..."
cp -f test-elif.c u01.c; rm -f u01.c.nocppp; cppp -DFALSE=0 -DUNKNOWN=1 u01.c
rm -f true-u01.c; $CPP_TRUE u01.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-u01.c
diff -bB true-u01.c true.c
if ($status != 0) then
  echo "true-u01.c differs from true.c"
  exit -1
endif

echo "101..."
cp -f test-elif.c 101.c; rm -f 101.c.nocppp; cppp -DTRUE=1 -DFALSE=0 -DUNKNOWN=1 101.c
rm -f true-101.c; $CPP_TRUE 101.c | perl -p -e 's/^\# [0-9]+ \".*\n//; s/^\n//;' > true-101.c
diff -bB true-101.c true.c
if ($status != 0) then
  echo "true-101.c differs from true.c"
  exit -1
endif
