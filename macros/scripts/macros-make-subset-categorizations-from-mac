#!/uns/bin/perl -anw
BEGIN {
  my $i = 0;
# we need to use $i+0, or else the value pointed to
# by the first handful keeps getting incremented, and
# we get uncategorized => 21, or whatever
# The postincrement returns a temporary which gets
# stored as the value in the hash

# FIX: this hash must be kept in sync with the table
# headings in latexify-mark-table
  %categoryname = (
		      'uncategorized' =>$i+0,
		      'being_categorized' =>$i+0,
		      'multiply_categorized' =>$i+0,
		      'failed_categorization' => $i++,
		      'null_define' =>$i++,
		      'expression' =>$i++,
		      'expression_with_assignment' =>$i++,
		      'expression_with_free_variables' =>$i++,
		      'literal' =>$i++,
		      'constant' =>$i++,
		      'some_constant' =>$i++,
		      'has_type_argument' => $i++,
		      'macro_as_function' => $i++,
		      'macro_as_type' => $i++,
		      'uses_type_argument' => $i++,
		      'expands_to_type' => $i++,
		      'expands_to_reserved_word' => $i++,
		      'statement' => $i++,
		      'recursive' => $i++,
		      'assembly_code' => $i++,
		      'syntax_tokens' => $i++,
		      'mismatched_entities' => $i++,
		      'token_pasting' => $i++,
		      'stringization' => $i++,
		      'LAST' =>$i++
		     );

sub marks_for_categories {
  $listref = $_[0];
  my $c;
  my $str = " " x ($categoryname{"LAST"});
  foreach $c (@$listref) {
    my $offset = $categoryname{$c};
    if (!defined($offset)) {
      die $c;
    }
    substr($str,$offset,1) = "*";
  }
  return $str;
}
}

use English;
next if /^[#%]/;
next if /FromInclude<>/;
my @cat = split(/,/,$F[8]);
print marks_for_categories(\@cat);
print "\n";
