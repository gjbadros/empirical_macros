#!/uns/bin/perl -w

# To produce tbl-lint.tex, run like this:
#   macros-make-lint-table < tbl-lint > tbl-lint.tex

use strict;
use em_util;

my $line;

while (($line = <>) =~ /^$/)
{ }

if ($line !~ /^Excluding libraries, (\d+) macros defined (\d+) times in (\d+) packages$/)
  { die "Bad initial line: $line"; }
# my $macros = $1;
# my $defs = $2;
# my $packages = $3;
my %msg = ();

while (defined($line = <>) && $line =~ /^([0-9]+)\s+\(([0-9]+\.[0-9]+)%\)\s(.*)$/)
# Used to also have    && ($3 ne "free variables")
{ if (($1 != 0) && ($2 != 0))
    { if (exists($msg{$2}))
	{ die "Two identically-frequent lint warnings:\n   $msg{$2}\n   $3"; }
      $msg{$2} = $3; } }
if ($line)
{ print STDERR "First unprocessed line: $line";
  while (defined($line = <>) && $line)
    { print STDERR "Unprocessed line: $line"; } }

print "\\begin{tabular}{|l|l|} \\hline\n";

for my $percent (sort {$b <=> $a} (keys %msg))
{ print "$msg{$percent} & ", two_significant_digits($percent), "\\% \\\\ \n"; }

print '\hline
\end{tabular}
';



## Input looks like this:
# Excluding libraries, 3166 macros defined 2071 times in 2 packages
# 8	(0.25%) inconsistent arity
# 4	(0.19%) null body with args
# 0	(0.00%) contains newline
# 63	(3.04%) unparenthesized body
# 1	(0.05%) doesn't swallow semicolon
# 245	(11.83%) free variables
# 1	(0.05%) bad formal name
# 84	(4.06%) multiple formal uses
# 0	(0.00%) adjacent formal uses
# 66	(3.19%) unparenthesized formal uses
# 4	(0.19%) side-effected formal
