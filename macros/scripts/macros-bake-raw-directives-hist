#!/uns/bin/perl -w

# Take a raw-directives-hist, which is a list of lines of the form
#  NCNB_lines package define elif else endif error ident if ifdef ifndef import include include_next line pragma undef

# Output a baked-directives-hist, which is a list of lines of the form
#  package define undef include conditional line other
# Also output a total line.

# The output is correctly in reverse order, since Excel reverses the lines
# (and columns!)

# This should really be controlled by a command-line argument.
my $use_percents = 0;
# $use_percents = 1;

$tot_lines = 0;
$tot_def = 0;
$tot_undef = 0;
$tot_include = 0;
$tot_cond = 0;
$tot_line = 0;
$tot_other = 0;
$tot_total = 0;

$file = shift @ARGV;
open(FILE, $file);
while (<FILE>)
{
  my ($ncnb_lines, $package, $define, $elif, $else, $endif, $error, $ident, $if, $ifdef, $ifndef, $import, $include, $include_next, $line, $pragma, $undef) = split;

  # $package
  # $ncnb_lines
  # $define
  # $undef
  $ncnb_lines /= 100;
  my $this_include = $import + $include + $include_next;
  my $this_cond = $if + $ifdef + $ifndef + $elif + $else + $endif;
  # $line
  my $this_other = $error + $ident + $pragma;
  my $this_total = $define + $undef + $this_include + $this_cond + $line + $this_other;

  { my $denom = ($use_percents ? $this_total/100.0 : $ncnb_lines);
    push(@lines, [$package, $this_other/$denom, $line/$denom, $this_cond/$denom, $this_include/$denom, $undef/$denom, $define/$denom, $this_total/$denom]); }

  $tot_lines += $ncnb_lines;
  $tot_def += $define;
  $tot_undef += $undef;
  $tot_include += $this_include;
  $tot_cond += $this_cond;
  $tot_line += $line;
  $tot_other += $this_other;
  $tot_total += $this_total;
}
close(FILE);

# Sort by total
my @lines_sorted = @lines;
if (!$use_percents)
{ @lines_sorted = sort { $$a[7] <=> $$b[7] } @lines_sorted; }

print join("\t", "package", "other", "line", "conditional", "include", "undef", "define", "total"), "\n";
print "Mean";
{ my $denom = ($use_percents ? $tot_total/100.0 : $tot_lines);
  foreach my $val ($tot_other/$denom, $tot_line/$denom, $tot_cond/$denom, $tot_include/$denom, $tot_undef/$denom, $tot_def/$denom, $tot_total/$denom)
    { printf("\t%2.3f", $val); } }
print "\n";
foreach $line_ref (@lines_sorted)
{ print shift(@$line_ref);
  foreach my $val (@$line_ref)
    { printf("\t%2.3f", $val); }
  print "\n";
  # "$package\t$this_other\t$line\t$this_cond\t$this_include\t$undef\t$define\n";
}
