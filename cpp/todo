Options:

o -P<filename.pl>
  Use perl in filename.pl and turn execution of hooks on
o -e <expression>
  Eval <expression>, too. (multiple should be allowed)
o -o <output-filename> [this already exists]
  Use this to separate the perl hook output and debug stuff from
    the actual cpp transformed-file output.


Hooks per:

o physical line

o logical line (pass unexpanded, stripped, and expanded versions; also
  probably want the number of physical lines)
  - Do I really care about this????  I don't think so

o NCNB line

o cpp directive
  * macro define
  * #include
  * cond comp
  * arbitrary

o macro expansion (i.e., use)

o comment

o fn decl'n

o fn def'n

o type decl'n

o typedef

o whole_ifdef_clause

o improve expand macro hook
   - give unexpanded text, list of literal args, expansion, etc.


----------------------
Grammar-based hooks

o function decl
  - begin
  - end

o variable decl

o typedef

o function call

o return

o loop
  - begin
  - end

o scope
  - enter
  -exit

o label

o switch
  - begin
  - case
  - end

o cast [type conversions]

-----------------------
Vars that need to be visible to perl

o Stack of buffers

o macro definitions
