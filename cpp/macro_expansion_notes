Cpp evals a macro's arguments before expanding the macro, so:

----
#define TA4(x,y) x + y
#define ABCD andafourth
TA4(ABCD,ABCD)
----

Will result in two expansions of the macro "ABCD" before any expansion
hooks are called for the "TA4" macro;  During the expansions of ABCD, 
the @nests argument to the EXPAND_MACRO hook will have "TA4#1[offset]"
and "TA4#2[offset]" respectively to indicate that we are nested in the
expansion of TA4, expanding arg #1 or #2.  

In other words, macro expansion hooks are called from inside out, and
the outer nesting is visible during the inner expansions through the
@nest argument.

Note, though, that only macros used in the expansion are expanded; e.g.,
if TA4 hadn't used its first argument, ABCD would only have been
expanded once.  Also, note that macros are expanded in the order of
their *use*, not in the order of their formals. so:

#define TA3(x,y) y + x
#define TA4(x,y) x + y
#define PA2(x) x
#define PA3(x) x + 4

TA4(TA3(PA2(x),PA3(y)),z)


TA3's 2nd arg (first to be expanded) is not a macro

               ^^^^^^
expand_macro PA3 = @  + 4@ , source offset: 12 - 18, 2 [1]; 1 in test6.h
 : nests = TA3#2[11]->TA4#1[458]

        ^^^^^^
expand_macro PA2 = @ @ , source offset: 5 - 11, 2 [1]; 1 in test6.h
 : nests = TA3#1[4]->TA4#1[458]

   ^^^^^^^^^^^^^^^^^^^
expand_macro TA3 = @  + @ , source offset: 459 - 477, 1 [1]; 1 in test6.h
 : nests = TA4#1[458]
  
expand_macro TA4 = @  + @ , source offset: 455 - 480, 0 [0]; 1 in test6.h
 : nests = 

------------------

cpp_get_token
    Non-macro?  
	annotate it and return in
    else
	macroexpand
		macarg  #1
			cpp_get_token        # this recursion is what @nests reports about
			...
		macarg  #2
			cpp_get_token        # ...ditto  @nests
			...
		...
		...
		cpp_expand_to_buffer  # for use #1
			cpp_push_buffer      # this recursion is what MEH reports about
			cpp_scan_buffer
				cpp_get_token
				...
				cpp_get_token
				...
				...
				--EOB--
				cpp_pop_buffer
		cpp_expand_to_buffer  # for use #2
			cpp_push_buffer      # .... ditto MacroExpansionHistory
			cpp_scan_buffer
				cpp_get_token
				...
				cpp_get_token
				...
				...
				--EOB--
				cpp_pop_buffer
		...
		...
		HI_EXPAND hook
		push_macro_expansion
	goto get_next;
		
